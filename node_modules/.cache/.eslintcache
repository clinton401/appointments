[{"C:\\Users\\clint\\Downloads\\appointment-planner-starting-v18\\appointment-planner-starting-v18\\src\\index.js":"1","C:\\Users\\clint\\Downloads\\appointment-planner-starting-v18\\appointment-planner-starting-v18\\src\\App.js":"2","C:\\Users\\clint\\Downloads\\appointment-planner-starting-v18\\appointment-planner-starting-v18\\src\\containers\\appointmentsPage\\AppointmentsPage.js":"3","C:\\Users\\clint\\Downloads\\appointment-planner-starting-v18\\appointment-planner-starting-v18\\src\\containers\\contactsPage\\ContactsPage.js":"4","C:\\Users\\clint\\Downloads\\appointment-planner-starting-v18\\appointment-planner-starting-v18\\src\\components\\root\\Root.js":"5","C:\\Users\\clint\\Downloads\\appointment-planner-starting-v18\\appointment-planner-starting-v18\\src\\components\\appointmentForm\\AppointmentForm.js":"6","C:\\Users\\clint\\Downloads\\appointment-planner-starting-v18\\appointment-planner-starting-v18\\src\\components\\tileList\\TileList.js":"7","C:\\Users\\clint\\Downloads\\appointment-planner-starting-v18\\appointment-planner-starting-v18\\src\\components\\contactForm\\ContactForm.js":"8","C:\\Users\\clint\\Downloads\\appointment-planner-starting-v18\\appointment-planner-starting-v18\\src\\components\\tile\\Tile.js":"9","C:\\Users\\clint\\Downloads\\appointment-planner-starting-v18\\appointment-planner-starting-v18\\src\\components\\contactPicker\\ContactPicker.js":"10"},{"size":214,"mtime":1679603288000,"results":"11","hashOfConfig":"12"},{"size":1579,"mtime":1681922776130,"results":"13","hashOfConfig":"12"},{"size":1432,"mtime":1681922810258,"results":"14","hashOfConfig":"12"},{"size":1604,"mtime":1681922797028,"results":"15","hashOfConfig":"12"},{"size":496,"mtime":1679605204000,"results":"16","hashOfConfig":"12"},{"size":1184,"mtime":1681838684308,"results":"17","hashOfConfig":"12"},{"size":723,"mtime":1681922854252,"results":"18","hashOfConfig":"12"},{"size":680,"mtime":1681839862096,"results":"19","hashOfConfig":"12"},{"size":764,"mtime":1681922831751,"results":"20","hashOfConfig":"12"},{"size":335,"mtime":1681840801052,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g8qztt",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"C:\\Users\\clint\\Downloads\\appointment-planner-starting-v18\\appointment-planner-starting-v18\\src\\index.js",[],[],"C:\\Users\\clint\\Downloads\\appointment-planner-starting-v18\\appointment-planner-starting-v18\\src\\App.js",["55"],[],"import React from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  \r\n  const [contacts , setContacts] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n\r\n    const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n\r\n  const addContacts = (phone, name, email) => {\r\n    setContacts([...contacts, {phone, name, email}]);\r\n  };\r\n  const addAppointments = (contact, date, time, title) => {\r\n    setAppointments([...appointments, {contact, date, time, title}])\r\n  }\r\n\r\n  const router = createBrowserRouter(createRoutesFromElements(\r\n    <Route path=\"/\" element={ <Root/> }>\r\n      <Route index element={ <Navigate to={ROUTES.CONTACTS} replace/> }/>\r\n      <Route path={ROUTES.CONTACTS} element={ <ContactsPage contacts={contacts} addContacts={addContacts}/> /* Add props to ContactsPage */ }/>\r\n      <Route path={ROUTES.APPOINTMENTS} element={ <AppointmentsPage appointments={appointments} contacts={contacts} addAppointments={addAppointments} /> /* Add props to AppointmentsPage */ }/>\r\n    </Route>\r\n  ));\r\n  \r\n  return (\r\n    <RouterProvider router={router}/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\clint\\Downloads\\appointment-planner-starting-v18\\appointment-planner-starting-v18\\src\\containers\\appointmentsPage\\AppointmentsPage.js",[],[],"C:\\Users\\clint\\Downloads\\appointment-planner-starting-v18\\appointment-planner-starting-v18\\src\\containers\\contactsPage\\ContactsPage.js",["56"],[],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = (props) => {\r\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\r\n  const contacts = props.contacts;\r\n  const addContacts = props.addContacts;\r\n\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [duplicate, setDuplicate] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\r\n   if(!duplicate) {\r\n    addContacts(name, phone, email);\r\n    setName('');\r\n    setPhone('');\r\n    setEmail('');\r\n   }\r\n  };\r\n\r\n  useEffect(() => {\r\n   const value = contacts.includes(name);\r\n   value ? setDuplicate(true) : setDuplicate(false);\r\n\r\n   return () => {\r\n    setDuplicate(false)\r\n   }\r\n   \r\n  }, [contacts])\r\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2> \r\n        <ContactForm \r\n          name={name}\r\n          phone={phone}\r\n          email={email}\r\n          setEmail={setEmail}\r\n          setName={setName}\r\n          setPhone={setPhone}\r\n          handleSubmit={handleSubmit}/>\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n      </section>\r\n      <TileList objArr={contacts}/>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\clint\\Downloads\\appointment-planner-starting-v18\\appointment-planner-starting-v18\\src\\components\\root\\Root.js",[],[],"C:\\Users\\clint\\Downloads\\appointment-planner-starting-v18\\appointment-planner-starting-v18\\src\\components\\appointmentForm\\AppointmentForm.js",[],[],"C:\\Users\\clint\\Downloads\\appointment-planner-starting-v18\\appointment-planner-starting-v18\\src\\components\\tileList\\TileList.js",[],[],"C:\\Users\\clint\\Downloads\\appointment-planner-starting-v18\\appointment-planner-starting-v18\\src\\components\\contactForm\\ContactForm.js",[],[],"C:\\Users\\clint\\Downloads\\appointment-planner-starting-v18\\appointment-planner-starting-v18\\src\\components\\tile\\Tile.js",[],[],"C:\\Users\\clint\\Downloads\\appointment-planner-starting-v18\\appointment-planner-starting-v18\\src\\components\\contactPicker\\ContactPicker.js",["57"],[],"import React from \"react\";\r\n\r\nexport const ContactPicker = (props) => {\r\n  const contacts = props.contacts;\r\n  const onChange = props.onChange;\r\n\r\n  return (\r\n    <select>\r\n      <option value=''>Select a contact</option>\r\n     { contacts.map(contact => <option value={contact.name}>{contact.name}</option>)}\r\n    </select>\r\n  );\r\n};\r\n",{"ruleId":"58","severity":1,"message":"59","line":4,"column":16,"nodeType":"60","messageId":"61","endLine":4,"endColumn":22},{"ruleId":"62","severity":1,"message":"63","line":41,"column":6,"nodeType":"64","endLine":41,"endColumn":16,"suggestions":"65"},{"ruleId":"58","severity":1,"message":"66","line":5,"column":9,"nodeType":"60","messageId":"61","endLine":5,"endColumn":17},"no-unused-vars","'ROUTES' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.","ArrayExpression",["67"],"'onChange' is assigned a value but never used.",{"desc":"68","fix":"69"},"Update the dependencies array to be: [contacts, name]",{"range":"70","text":"71"},[1042,1052],"[contacts, name]"]