{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clint\\\\Downloads\\\\appointment-planner-starting-v18\\\\appointment-planner-starting-v18\\\\src\\\\components\\\\appointmentForm\\\\AppointmentForm.js\";\nimport React from \"react\";\nimport { ContactPicker } from '../contactPicker/ContactPicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getTodayString = () => {\n  const [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n};\nconst getContactNames = () => {\n  return contacts.map(contact => contact.name);\n};\nexport const AppointmentForm = _ref => {\n  let {\n    contacts,\n    title,\n    setTitle,\n    contact,\n    setContact,\n    date,\n    setDate,\n    time,\n    setTime,\n    handleSubmit\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Appointment Title\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: date,\n      onChange: e => setDate(e.target.value),\n      min: getTodayString(),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      value: time,\n      onChange: e => setTime(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(ContactPicker, {\n      contacts: contacts,\n      value: contacts,\n      onChange: e => setContacts(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Add Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","ContactPicker","jsxDEV","_jsxDEV","getTodayString","month","day","year","Date","toLocaleDateString","split","padStart","getContactNames","contacts","map","contact","name","AppointmentForm","_ref","title","setTitle","setContact","date","setDate","time","setTime","handleSubmit","onSubmit","children","type","value","onChange","e","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","min","setContacts","_c","$RefreshReg$"],"sources":["C:/Users/clint/Downloads/appointment-planner-starting-v18/appointment-planner-starting-v18/src/components/appointmentForm/AppointmentForm.js"],"sourcesContent":["import React from \"react\";\r\nimport {ContactPicker} from '../contactPicker/ContactPicker';\r\n\r\nconst getTodayString = () => {\r\n  const [month, day, year] = new Date()\r\n    .toLocaleDateString(\"en-US\")\r\n    .split(\"/\");\r\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n};\r\nconst getContactNames = () => {\r\n  return contacts.map((contact) => contact.name);\r\n};\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n     <input type='text' value={title} onChange={e => setTitle(e.target.value)}  placeholder=\"Appointment Title\" required/>\r\n     <input type='date' value={date} onChange={e => setDate(e.target.value)} min={getTodayString()} required />\r\n     <input type='time' value={time} onChange={e => setTime(e.target.value)} required />\r\n     <ContactPicker contacts={contacts} value={contacts} onChange={e => setContacts(e.target.value)}/>\r\n     <input type=\"submit\" value='Add Appointment'/>\r\n\r\n    </form>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,aAAa,QAAO,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAM,CAACC,KAAK,EAAEC,GAAG,EAAEC,IAAI,CAAC,GAAG,IAAIC,IAAI,EAAE,CAClCC,kBAAkB,CAAC,OAAO,CAAC,CAC3BC,KAAK,CAAC,GAAG,CAAC;EACb,OAAQ,GAAEH,IAAK,IAAGF,KAAK,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGL,GAAG,CAACK,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;AACpE,CAAC;AACD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B,OAAOC,QAAQ,CAACC,GAAG,CAAEC,OAAO,IAAKA,OAAO,CAACC,IAAI,CAAC;AAChD,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGC,IAAA,IAWzB;EAAA,IAX0B;IAC9BL,QAAQ;IACRM,KAAK;IACLC,QAAQ;IACRL,OAAO;IACPM,UAAU;IACVC,IAAI;IACJC,OAAO;IACPC,IAAI;IACJC,OAAO;IACPC;EACF,CAAC,GAAAR,IAAA;EAEC,oBACEf,OAAA;IAAMwB,QAAQ,EAAED,YAAa;IAAAE,QAAA,gBAC5BzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEX,KAAM;MAACY,QAAQ,EAAEC,CAAC,IAAIZ,QAAQ,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAEI,WAAW,EAAC,mBAAmB;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACrHpC,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAER,IAAK;MAACS,QAAQ,EAAEC,CAAC,IAAIT,OAAO,CAACS,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACU,GAAG,EAAEpC,cAAc,EAAG;MAAC+B,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC1GpC,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEN,IAAK;MAACO,QAAQ,EAAEC,CAAC,IAAIP,OAAO,CAACO,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACK,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACnFpC,OAAA,CAACF,aAAa;MAACY,QAAQ,EAAEA,QAAS;MAACiB,KAAK,EAAEjB,QAAS;MAACkB,QAAQ,EAAEC,CAAC,IAAIS,WAAW,CAACT,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACjGpC,OAAA;MAAO0B,IAAI,EAAC,QAAQ;MAACC,KAAK,EAAC;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAExC;AAEX,CAAC;AAACG,EAAA,GAvBWzB,eAAe;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}