{"ast":null,"code":"import _slicedToArray from\"C:/Users/clint/Downloads/appointment-planner-starting-v18/appointment-planner-starting-v18/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{ContactForm}from\"../../components/contactForm/ContactForm\";import{TileList}from\"../../components/tileList/TileList\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ContactsPage=function ContactsPage(props){/*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */var contacts=props.contacts;var addContacts=props.addContacts;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),phone=_useState4[0],setPhone=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),email=_useState6[0],setEmail=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),duplicate=_useState8[0],setDuplicate=_useState8[1];var handleSubmit=function handleSubmit(e){e.preventDefault();/*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */if(!duplicate){addContacts(name,phone,email);setName('');setPhone('');setEmail('');}};useEffect(function(){var value=contacts.includes(name);value?setDuplicate(true):setDuplicate(false);return function(){setDuplicate(false);};},[contacts]);/*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add Contact\"}),/*#__PURE__*/_jsx(ContactForm,{name:name,phone:phone,email:email,setEmail:setEmail,setName:setName,setPhone:setPhone,handleSubmit:handleSubmit})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"section\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Contacts\"})}),/*#__PURE__*/_jsx(TileList,{objArr:contacts})]});};","map":{"version":3,"names":["React","useState","useEffect","ContactForm","TileList","jsx","_jsx","jsxs","_jsxs","ContactsPage","props","contacts","addContacts","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","phone","setPhone","_useState5","_useState6","email","setEmail","_useState7","_useState8","duplicate","setDuplicate","handleSubmit","e","preventDefault","value","includes","children","objArr"],"sources":["C:/Users/clint/Downloads/appointment-planner-starting-v18/appointment-planner-starting-v18/src/containers/contactsPage/ContactsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = (props) => {\r\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\r\n  const contacts = props.contacts;\r\n  const addContacts = props.addContacts;\r\n\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [duplicate, setDuplicate] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\r\n   if(!duplicate) {\r\n    addContacts(name, phone, email);\r\n    setName('');\r\n    setPhone('');\r\n    setEmail('');\r\n   }\r\n  };\r\n\r\n  useEffect(() => {\r\n   const value = contacts.includes(name);\r\n   value ? setDuplicate(true) : setDuplicate(false);\r\n\r\n   return () => {\r\n    setDuplicate(false)\r\n   }\r\n   \r\n  }, [contacts])\r\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2> \r\n        <ContactForm \r\n          name={name}\r\n          phone={phone}\r\n          email={email}\r\n          setEmail={setEmail}\r\n          setName={setName}\r\n          setPhone={setPhone}\r\n          handleSubmit={handleSubmit}/>\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n      </section>\r\n      <TileList objArr={contacts}/>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"gLAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAElD,OAASC,WAAW,KAAQ,0CAA0C,CACtE,OAASC,QAAQ,KAAQ,oCAAoC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE9D,MAAO,IAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,KAAK,CAAK,CACrC;AACF;AACA;AACA,IACE,GAAM,CAAAC,QAAQ,CAAGD,KAAK,CAACC,QAAQ,CAC/B,GAAM,CAAAC,WAAW,CAAGF,KAAK,CAACE,WAAW,CAErC,IAAAC,SAAA,CAAwBZ,QAAQ,CAAC,EAAE,CAAC,CAAAa,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA7BG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IACpB,IAAAI,UAAA,CAA0BjB,QAAQ,CAAC,EAAE,CAAC,CAAAkB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA/BE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IACtB,IAAAG,UAAA,CAA0BrB,QAAQ,CAAC,EAAE,CAAC,CAAAsB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAA/BE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IACtB,IAAAG,UAAA,CAAkCzB,QAAQ,CAAC,KAAK,CAAC,CAAA0B,UAAA,CAAAZ,cAAA,CAAAW,UAAA,IAA1CE,SAAS,CAAAD,UAAA,IAAEE,YAAY,CAAAF,UAAA,IAE9B,GAAM,CAAAG,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,CAAC,CAAK,CAC1BA,CAAC,CAACC,cAAc,EAAE,CAClB;AACJ;AACA;AACA,MACG,GAAG,CAACJ,SAAS,CAAE,CACdhB,WAAW,CAACI,IAAI,CAAEI,KAAK,CAAEI,KAAK,CAAC,CAC/BP,OAAO,CAAC,EAAE,CAAC,CACXI,QAAQ,CAAC,EAAE,CAAC,CACZI,QAAQ,CAAC,EAAE,CAAC,CACb,CACD,CAAC,CAEDvB,SAAS,CAAC,UAAM,CACf,GAAM,CAAA+B,KAAK,CAAGtB,QAAQ,CAACuB,QAAQ,CAAClB,IAAI,CAAC,CACrCiB,KAAK,CAAGJ,YAAY,CAAC,IAAI,CAAC,CAAGA,YAAY,CAAC,KAAK,CAAC,CAEhD,MAAO,WAAM,CACZA,YAAY,CAAC,KAAK,CAAC,CACpB,CAAC,CAEF,CAAC,CAAE,CAAClB,QAAQ,CAAC,CAAC,CACd;AACF;AACA;AACA,IAEE,mBACEH,KAAA,QAAA2B,QAAA,eACE3B,KAAA,YAAA2B,QAAA,eACE7B,IAAA,OAAA6B,QAAA,CAAI,aAAW,EAAK,cACpB7B,IAAA,CAACH,WAAW,EACVa,IAAI,CAAEA,IAAK,CACXI,KAAK,CAAEA,KAAM,CACbI,KAAK,CAAEA,KAAM,CACbC,QAAQ,CAAEA,QAAS,CACnBR,OAAO,CAAEA,OAAQ,CACjBI,QAAQ,CAAEA,QAAS,CACnBS,YAAY,CAAEA,YAAa,EAAE,GACvB,cACVxB,IAAA,SAAM,cACNA,IAAA,YAAA6B,QAAA,cACE7B,IAAA,OAAA6B,QAAA,CAAI,UAAQ,EAAK,EACT,cACV7B,IAAA,CAACF,QAAQ,EAACgC,MAAM,CAAEzB,QAAS,EAAE,GACzB,CAEV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}